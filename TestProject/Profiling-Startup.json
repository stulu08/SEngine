{"otherData": {},"traceEvents":[{"cat":"function","dur":5148,"name":"void __cdecl Stulu::OpenGLContext::init(void)","ph":"X","pid":0,"tid":2048129665,"ts":6248198086},{"cat":"function","dur":43,"name":"void __cdecl Stulu::GLwindowsWindow::setVSysnc(bool)","ph":"X","pid":0,"tid":2048129665,"ts":6248203494},{"cat":"function","dur":1014787,"name":"void __cdecl Stulu::GLwindowsWindow::init(const struct Stulu::WindowProps &)","ph":"X","pid":0,"tid":2048129665,"ts":6247188834},{"cat":"function","dur":1014847,"name":"__cdecl Stulu::GLwindowsWindow::GLwindowsWindow(const struct Stulu::WindowProps &)","ph":"X","pid":0,"tid":2048129665,"ts":6247188825},{"cat":"function","dur":12,"name":"void __cdecl Stulu::OpenGLRenderAPI::init(void)","ph":"X","pid":0,"tid":2048129665,"ts":6248203760},{"cat":"function","dur":56,"name":"__cdecl Stulu::OpenGLVertexArray::OpenGLVertexArray(void)","ph":"X","pid":0,"tid":2048129665,"ts":6248203885},{"cat":"function","dur":31,"name":"__cdecl Stulu::OpenGLVertexBuffer::OpenGLVertexBuffer(unsigned int)","ph":"X","pid":0,"tid":2048129665,"ts":6248204076},{"cat":"function","dur":0,"name":"void __cdecl Stulu::OpenGLVertexBuffer::bind(void) const","ph":"X","pid":0,"tid":2048129665,"ts":6248204398},{"cat":"function","dur":174,"name":"void __cdecl Stulu::OpenGLVertexArray::addVertexBuffer(const class std::shared_ptr<class Stulu::VertexBuffer> &)","ph":"X","pid":0,"tid":2048129665,"ts":6248204321},{"cat":"function","dur":151,"name":"__cdecl Stulu::OpenGLIndexBuffer::OpenGLIndexBuffer(unsigned int,unsigned int *)","ph":"X","pid":0,"tid":2048129665,"ts":6248205116},{"cat":"function","dur":0,"name":"void __cdecl Stulu::OpenGLIndexBuffer::bind(void) const","ph":"X","pid":0,"tid":2048129665,"ts":6248205363},{"cat":"function","dur":47,"name":"void __cdecl Stulu::OpenGLVertexArray::setIndexBuffer(const class std::shared_ptr<class Stulu::IndexBuffer> &)","ph":"X","pid":0,"tid":2048129665,"ts":6248205362},{"cat":"function","dur":957,"name":"reading file - OpenGLTexture2D::OpenGLTexture2D(const std::string&)","ph":"X","pid":0,"tid":2048129665,"ts":6248205520},{"cat":"function","dur":1116,"name":"__cdecl Stulu::OpenGLTexture2D::OpenGLTexture2D(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":2048129665,"ts":6248205519},{"cat":"function","dur":437,"name":"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl Stulu::OpenGLShader::readFile(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":2048129665,"ts":6248206740},{"cat":"function","dur":101,"name":"class std::unordered_map<unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned int>,struct std::equal_to<unsigned int>,class std::allocator<struct std::pair<unsigned int const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl Stulu::OpenGLShader::preProcess(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool)","ph":"X","pid":0,"tid":2048129665,"ts":6248207279},{"cat":"function","dur":1262,"name":"void __cdecl Stulu::OpenGLShader::compile(const class std::unordered_map<unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned int>,struct std::equal_to<unsigned int>,class std::allocator<struct std::pair<unsigned int const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > &)","ph":"X","pid":0,"tid":2048129665,"ts":6248207504},{"cat":"function","dur":2159,"name":"__cdecl Stulu::OpenGLShader::OpenGLShader(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":2048129665,"ts":6248206731},{"cat":"function","dur":40,"name":"void __cdecl Stulu::OpenGLShader::bind(void) const","ph":"X","pid":0,"tid":2048129665,"ts":6248208987},{"cat":"function","dur":34,"name":"void __cdecl Stulu::OpenGLShader::uploadIntUniform(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,const int)","ph":"X","pid":0,"tid":2048129665,"ts":6248209092},{"cat":"function","dur":5400,"name":"void __cdecl Stulu::Renderer2D::init(void)","ph":"X","pid":0,"tid":2048129665,"ts":6248203862},{"cat":"function","dur":184,"name":"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl Stulu::OpenGLShader::readFile(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":2048129665,"ts":6248209320},{"cat":"function","dur":31,"name":"class std::unordered_map<unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned int>,struct std::equal_to<unsigned int>,class std::allocator<struct std::pair<unsigned int const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl Stulu::OpenGLShader::preProcess(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool)","ph":"X","pid":0,"tid":2048129665,"ts":6248209562},{"cat":"function","dur":225,"name":"void __cdecl Stulu::OpenGLShader::compile(const class std::unordered_map<unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned int>,struct std::equal_to<unsigned int>,class std::allocator<struct std::pair<unsigned int const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > &)","ph":"X","pid":0,"tid":2048129665,"ts":6248209644},{"cat":"function","dur":629,"name":"__cdecl Stulu::OpenGLShader::OpenGLShader(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":2048129665,"ts":6248209320},{"cat":"function","dur":29,"name":"void __cdecl Stulu::OpenGLShader::bind(void) const","ph":"X","pid":0,"tid":2048129665,"ts":6248210010},{"cat":"function","dur":15,"name":"void __cdecl Stulu::OpenGLShader::uploadIntUniform(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,const int)","ph":"X","pid":0,"tid":2048129665,"ts":6248210106},{"cat":"function","dur":24,"name":"__cdecl Stulu::OpenGLVertexArray::OpenGLVertexArray(void)","ph":"X","pid":0,"tid":2048129665,"ts":6248210181},{"cat":"function","dur":19,"name":"__cdecl Stulu::OpenGLVertexBuffer::OpenGLVertexBuffer(unsigned int,float *)","ph":"X","pid":0,"tid":2048129665,"ts":6248210259},{"cat":"function","dur":0,"name":"void __cdecl Stulu::OpenGLVertexBuffer::bind(void) const","ph":"X","pid":0,"tid":2048129665,"ts":6248210423},{"cat":"function","dur":140,"name":"void __cdecl Stulu::OpenGLVertexArray::addVertexBuffer(const class std::shared_ptr<class Stulu::VertexBuffer> &)","ph":"X","pid":0,"tid":2048129665,"ts":6248210333},{"cat":"function","dur":1202,"name":"void __cdecl Stulu::Renderer::setUpSkyBox(void)","ph":"X","pid":0,"tid":2048129665,"ts":6248209315},{"cat":"function","dur":6806,"name":"void __cdecl Stulu::Renderer::init(void)","ph":"X","pid":0,"tid":2048129665,"ts":6248203751},{"cat":"function","dur":629,"name":"void __cdecl Stulu::ImGuiLayer::onAttach(void)","ph":"X","pid":0,"tid":2048129665,"ts":6248210636},{"cat":"function","dur":708,"name":"void __cdecl Stulu::LayerStack::pushOverlay(class Stulu::Layer *)","ph":"X","pid":0,"tid":2048129665,"ts":6248210619},{"cat":"function","dur":1022589,"name":"__cdecl Stulu::Application::Application(void)","ph":"X","pid":0,"tid":2048129665,"ts":6247188780},{"cat":"function","dur":16562,"name":"void __cdecl Stulu::GLwindowsWindow::setWindowIcon(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":2048129665,"ts":6248211427},{"cat":"function","dur":55,"name":"void __cdecl Stulu::GLwindowsWindow::setVSysnc(bool)","ph":"X","pid":0,"tid":2048129665,"ts":6248228131},{"cat":"function","dur":2,"name":"void __cdecl Stulu::OpenGLRenderAPI::setClearColor(const struct glm::vec<4,float,0> &)","ph":"X","pid":0,"tid":2048129665,"ts":6248228311},{"cat":"function","dur":63,"name":"void __cdecl Stulu::LayerStack::pushLayer(class Stulu::Layer *)","ph":"X","pid":0,"tid":2048129665,"ts":6248228303}]}