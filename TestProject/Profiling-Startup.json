{"otherData": {},"traceEvents":[{"cat":"function","dur":5204,"name":"void __cdecl Stulu::OpenGLContext::init(void)","ph":"X","pid":0,"tid":309168012,"ts":10360625310},{"cat":"function","dur":48,"name":"void __cdecl Stulu::GLwindowsWindow::setVSysnc(bool)","ph":"X","pid":0,"tid":309168012,"ts":10360630813},{"cat":"function","dur":1107979,"name":"void __cdecl Stulu::GLwindowsWindow::init(const struct Stulu::WindowProps &)","ph":"X","pid":0,"tid":309168012,"ts":10359522999},{"cat":"function","dur":1108051,"name":"__cdecl Stulu::GLwindowsWindow::GLwindowsWindow(const struct Stulu::WindowProps &)","ph":"X","pid":0,"tid":309168012,"ts":10359522999},{"cat":"function","dur":12,"name":"void __cdecl Stulu::OpenGLRenderAPI::init(void)","ph":"X","pid":0,"tid":309168012,"ts":10360631244},{"cat":"function","dur":49,"name":"__cdecl Stulu::OpenGLVertexArray::OpenGLVertexArray(void)","ph":"X","pid":0,"tid":309168012,"ts":10360631402},{"cat":"function","dur":30,"name":"__cdecl Stulu::OpenGLVertexBuffer::OpenGLVertexBuffer(unsigned int)","ph":"X","pid":0,"tid":309168012,"ts":10360631569},{"cat":"function","dur":0,"name":"void __cdecl Stulu::OpenGLVertexBuffer::bind(void) const","ph":"X","pid":0,"tid":309168012,"ts":10360631807},{"cat":"function","dur":240,"name":"void __cdecl Stulu::OpenGLVertexArray::addVertexBuffer(const class std::shared_ptr<class Stulu::VertexBuffer> &)","ph":"X","pid":0,"tid":309168012,"ts":10360631721},{"cat":"function","dur":137,"name":"__cdecl Stulu::OpenGLIndexBuffer::OpenGLIndexBuffer(unsigned int,unsigned int *)","ph":"X","pid":0,"tid":309168012,"ts":10360632690},{"cat":"function","dur":1,"name":"void __cdecl Stulu::OpenGLIndexBuffer::bind(void) const","ph":"X","pid":0,"tid":309168012,"ts":10360632945},{"cat":"function","dur":89,"name":"void __cdecl Stulu::OpenGLVertexArray::setIndexBuffer(const class std::shared_ptr<class Stulu::IndexBuffer> &)","ph":"X","pid":0,"tid":309168012,"ts":10360632945},{"cat":"function","dur":518,"name":"reading file - OpenGLTexture2D::OpenGLTexture2D(const std::string&)","ph":"X","pid":0,"tid":309168012,"ts":10360633208},{"cat":"function","dur":803,"name":"__cdecl Stulu::OpenGLTexture2D::OpenGLTexture2D(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":309168012,"ts":10360633208},{"cat":"function","dur":312,"name":"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl Stulu::OpenGLShader::readFile(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":309168012,"ts":10360634184},{"cat":"function","dur":142,"name":"class std::unordered_map<unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned int>,struct std::equal_to<unsigned int>,class std::allocator<struct std::pair<unsigned int const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl Stulu::OpenGLShader::preProcess(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool)","ph":"X","pid":0,"tid":309168012,"ts":10360634614},{"cat":"function","dur":1282,"name":"void __cdecl Stulu::OpenGLShader::compile(const class std::unordered_map<unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned int>,struct std::equal_to<unsigned int>,class std::allocator<struct std::pair<unsigned int const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > &)","ph":"X","pid":0,"tid":309168012,"ts":10360634855},{"cat":"function","dur":2074,"name":"__cdecl Stulu::OpenGLShader::OpenGLShader(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":309168012,"ts":10360634174},{"cat":"function","dur":30,"name":"void __cdecl Stulu::OpenGLShader::bind(void) const","ph":"X","pid":0,"tid":309168012,"ts":10360636323},{"cat":"function","dur":25,"name":"void __cdecl Stulu::OpenGLShader::uploadIntUniform(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,const int)","ph":"X","pid":0,"tid":309168012,"ts":10360636426},{"cat":"function","dur":5239,"name":"void __cdecl Stulu::Renderer2D::init(void)","ph":"X","pid":0,"tid":309168012,"ts":10360631345},{"cat":"function","dur":207,"name":"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl Stulu::OpenGLShader::readFile(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":309168012,"ts":10360636649},{"cat":"function","dur":32,"name":"class std::unordered_map<unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned int>,struct std::equal_to<unsigned int>,class std::allocator<struct std::pair<unsigned int const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > __cdecl Stulu::OpenGLShader::preProcess(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool)","ph":"X","pid":0,"tid":309168012,"ts":10360636914},{"cat":"function","dur":196,"name":"void __cdecl Stulu::OpenGLShader::compile(const class std::unordered_map<unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::hash<unsigned int>,struct std::equal_to<unsigned int>,class std::allocator<struct std::pair<unsigned int const ,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > &)","ph":"X","pid":0,"tid":309168012,"ts":10360636997},{"cat":"function","dur":602,"name":"__cdecl Stulu::OpenGLShader::OpenGLShader(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":309168012,"ts":10360636649},{"cat":"function","dur":41,"name":"void __cdecl Stulu::OpenGLShader::bind(void) const","ph":"X","pid":0,"tid":309168012,"ts":10360637312},{"cat":"function","dur":20,"name":"void __cdecl Stulu::OpenGLShader::uploadIntUniform(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,const int)","ph":"X","pid":0,"tid":309168012,"ts":10360637430},{"cat":"function","dur":22,"name":"__cdecl Stulu::OpenGLVertexArray::OpenGLVertexArray(void)","ph":"X","pid":0,"tid":309168012,"ts":10360637528},{"cat":"function","dur":13,"name":"__cdecl Stulu::OpenGLVertexBuffer::OpenGLVertexBuffer(unsigned int,float *)","ph":"X","pid":0,"tid":309168012,"ts":10360637637},{"cat":"function","dur":0,"name":"void __cdecl Stulu::OpenGLVertexBuffer::bind(void) const","ph":"X","pid":0,"tid":309168012,"ts":10360637830},{"cat":"function","dur":180,"name":"void __cdecl Stulu::OpenGLVertexArray::addVertexBuffer(const class std::shared_ptr<class Stulu::VertexBuffer> &)","ph":"X","pid":0,"tid":309168012,"ts":10360637737},{"cat":"function","dur":1347,"name":"void __cdecl Stulu::Renderer::setUpSkyBox(void)","ph":"X","pid":0,"tid":309168012,"ts":10360636644},{"cat":"function","dur":6806,"name":"void __cdecl Stulu::Renderer::init(void)","ph":"X","pid":0,"tid":309168012,"ts":10360631242},{"cat":"function","dur":414,"name":"void __cdecl Stulu::ImGuiLayer::onAttach(void)","ph":"X","pid":0,"tid":309168012,"ts":10360638183},{"cat":"function","dur":500,"name":"void __cdecl Stulu::LayerStack::pushOverlay(class Stulu::Layer *)","ph":"X","pid":0,"tid":309168012,"ts":10360638171},{"cat":"function","dur":1115789,"name":"__cdecl Stulu::Application::Application(void)","ph":"X","pid":0,"tid":309168012,"ts":10359522950},{"cat":"function","dur":18806,"name":"void __cdecl Stulu::GLwindowsWindow::setWindowIcon(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)","ph":"X","pid":0,"tid":309168012,"ts":10360638806},{"cat":"function","dur":54,"name":"void __cdecl Stulu::GLwindowsWindow::setVSysnc(bool)","ph":"X","pid":0,"tid":309168012,"ts":10360657737},{"cat":"function","dur":2,"name":"void __cdecl Stulu::OpenGLRenderAPI::setClearColor(const struct glm::vec<4,float,0> &)","ph":"X","pid":0,"tid":309168012,"ts":10360657902},{"cat":"function","dur":65,"name":"void __cdecl Stulu::LayerStack::pushLayer(class Stulu::Layer *)","ph":"X","pid":0,"tid":309168012,"ts":10360657893}]}